<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content">
    <!-- 초기 오버레이 크기를 컨텐츠에 맞추려면 wrap_content 사용 -->
    <!-- 또는 특정 크기를 원하면 해당 크기로 지정 -->

    <!-- 기존의 정적 컨트롤러 요소들이 있다면 여기에 배치 -->
    <!-- 예시: <LinearLayout ... /> 또는 <Button ... /> 등 -->
    <LinearLayout
        android:id="@+id/static_controls_container"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:background="#80000000"
        android:padding="8dp">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="고정 UI"
            android:textColor="@android:color/white"/>
        <!-- 여기에 실제 고정 버튼 등을 추가할 수 있습니다. -->

    </LinearLayout>

    <!-- <<<< 동적 커스텀 버튼이 추가될 컨테이너 >>>> -->
    <!-- 이 FrameLayout이 customButtonContainer가 됩니다. -->
    <!-- 이 컨테이너의 크기에 따라 커스텀 버튼의 위치 백분율이 계산됩니다. -->
    <!-- 만약 이 컨테이너가 오버레이 뷰 전체와 같다면, 화면 전체를 기준으로 계산됩니다. -->
    <FrameLayout
        android:id="@+id/custom_button_area"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />
    <!--
        이 FrameLayout의 layout_width와 layout_height를 어떻게 설정하느냐에 따라
        커스텀 버튼의 % 위치 계산 기준이 달라집니다.
        - match_parent로 하면, 이 FrameLayout은 부모 (가장 바깥쪽 FrameLayout)의 크기를 따릅니다.
          만약 가장 바깥쪽 FrameLayout이 wrap_content이면, 이 custom_button_area도
          처음에는 내용이 없어 작게 시작했다가 버튼이 추가되면서 커질 수 있습니다.
          이것이 의도한 바가 아니라면, OverlayViewManager에서 params.width/height를
          화면 전체나 특정 크기로 고정하고, custom_button_area도 그에 맞게 설정해야 합니다.
        - OverlayViewManager의 displayCustomButtons에서 화면 크기(screenWidth, screenHeight)를
          가져와서 버튼 위치를 계산하고 있으므로, custom_button_area가 화면 전체를
          기준으로 하는 것이 현재 로직과 가장 잘 맞습니다.
          이를 위해서는 OverlayViewManager의 params.width/height도 초기에
          화면 전체(또는 매우 큰 값)로 설정하거나, 버튼 추가 후 동적으로 업데이트해야 할 수 있습니다.

        가장 간단한 접근:
        1. OverlayViewManager에서 params.width = WindowManager.LayoutParams.MATCH_PARENT,
                                 params.height = WindowManager.LayoutParams.MATCH_PARENT 로 설정.
        2. controller_layout.xml의 최상위 루트도 match_parent 또는 wrap_content.
        3. custom_button_area는 match_parent.
        이렇게 하면 버튼들은 화면 전체를 기준으로 위치하게 됩니다.
    -->
</FrameLayout>
